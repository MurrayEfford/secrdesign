// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Lambdacpp
Rcpp::List Lambdacpp(int type, const arma::vec par, const arma::mat d, int detectfn);
RcppExport SEXP _secrdesign_Lambdacpp(SEXP typeSEXP, SEXP parSEXP, SEXP dSEXP, SEXP detectfnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type type(typeSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type par(parSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type detectfn(detectfnSEXP);
    rcpp_result_gen = Rcpp::wrap(Lambdacpp(type, par, d, detectfn));
    return rcpp_result_gen;
END_RCPP
}
// Qpmcpp
Rcpp::List Qpmcpp(const arma::vec par, const arma::rowvec D, const arma::mat d, int detectfn, int noccasions);
RcppExport SEXP _secrdesign_Qpmcpp(SEXP parSEXP, SEXP DSEXP, SEXP dSEXP, SEXP detectfnSEXP, SEXP noccasionsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec >::type par(parSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec >::type D(DSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type d(dSEXP);
    Rcpp::traits::input_parameter< int >::type detectfn(detectfnSEXP);
    Rcpp::traits::input_parameter< int >::type noccasions(noccasionsSEXP);
    rcpp_result_gen = Rcpp::wrap(Qpmcpp(par, D, d, detectfn, noccasions));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_secrdesign_Lambdacpp", (DL_FUNC) &_secrdesign_Lambdacpp, 4},
    {"_secrdesign_Qpmcpp", (DL_FUNC) &_secrdesign_Qpmcpp, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_secrdesign(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
